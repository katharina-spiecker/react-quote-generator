{"version":3,"sources":["components/shareIcons.jsx","components/quoteBox.jsx","App.js","index.js"],"names":["shareIcons","state","iconStyle","width","height","color","this","props","href","class","id","icon","faTwitter","style","faFacebookSquare","Component","quoteBox","currentQuote","currentAuthor","getQuote","randomIndex","fetch","then","response","json","data","Math","floor","random","quotes","length","setState","quote","author","handleClick","onColorUpdate","currentColor","faQuoteLeft","className","onClick","backgroundColor","App","i","handleColorUpdate","colors","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAiCeA,E,4MAzBbC,MAAQ,G,uDAEN,IAAIC,EAAY,CACdC,MAAO,GACPC,OAAQ,GACRC,MAAOC,KAAKC,MAAMF,OAGpB,OACE,6BACE,uBACEG,KAAK,mCACLC,MAAM,SACNC,GAAG,eAEH,kBAAC,IAAD,CAAiBC,KAAMC,IAAWC,MAAOX,KAE3C,uBAAGM,KAAK,2BAA2BC,MAAM,UACvC,kBAAC,IAAD,CAAiBE,KAAMG,IAAkBD,MAAOX,U,GAnBjCa,a,QCwDVC,G,kNAxDbf,MAAQ,CACNgB,aAAc,wDACdC,cAAe,qB,EAGjBC,SAAW,WACT,IAAIC,EACJC,MACE,0IAECC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLL,EAAcM,KAAKC,MAAMD,KAAKE,SAAWH,EAAKI,OAAOC,QACrD,EAAKC,SAAS,CAAEd,aAAcQ,EAAKI,OAAOT,GAAaY,QACvD,EAAKD,SAAS,CACZb,cAAe,KAAOO,EAAKI,OAAOT,GAAaa,a,EAKvDC,YAAc,WACZ,EAAKf,WACL,EAAKZ,MAAM4B,iB,uDAIX,OAEE,yBAAKzB,GAAG,YAAYG,MAAO,CAAER,MAAOC,KAAKC,MAAM6B,eAC7C,6BACE,yBAAK3B,MAAM,iBACT,kBAAC,IAAD,CAAiBE,KAAM0B,MACvB,uBAAG3B,GAAG,QAAQJ,KAAKL,MAAMgB,eAG3B,uBAAGP,GAAG,UAAUJ,KAAKL,MAAMiB,gBAG7B,yBAAKT,MAAM,gBACT,kBAAC,EAAD,CAAYJ,MAAOC,KAAKC,MAAM6B,eAC9B,4BACE1B,GAAG,YACH4B,UAAU,qBACVC,QAASjC,KAAK4B,YACdrB,MAAO,CACL2B,gBAAiBlC,KAAKC,MAAM6B,eALhC,0B,GAzCarB,cCuBR0B,E,4MAxBbxC,MAAQ,CACNmC,aAAc,W,EAchBM,EAAI,E,EACJC,kBAAoB,WAClB,IAAMC,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,WACxD,EAAKF,IAAME,EAAOd,SAAQ,EAAKY,EAAI,GACvC,EAAKX,SAAS,CAAEK,aAAcQ,EAAO,EAAKF,KAC1C,EAAKA,K,uDAfL,OACE,yBAAKJ,UAAU,MAAMzB,MAAO,CAAE2B,gBAAiBlC,KAAKL,MAAMmC,eACxD,kBAAC,EAAD,CACEA,aAAc9B,KAAKL,MAAMmC,aACzBD,cAAe7B,KAAKqC,yB,GAVZ5B,aCClB8B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.dcb92e1f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faFacebookSquare,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nclass shareIcons extends Component {\n  state = {};\n  render() {\n    let iconStyle = {\n      width: 30,\n      height: 30,\n      color: this.props.color,\n    };\n\n    return (\n      <div>\n        <a\n          href=\"https://twitter.com/intent/tweet\"\n          class=\"button\"\n          id=\"tweet-quote\"\n        >\n          <FontAwesomeIcon icon={faTwitter} style={iconStyle} />\n        </a>\n        <a href=\"https://www.facebook.com\" class=\"button\">\n          <FontAwesomeIcon icon={faFacebookSquare} style={iconStyle} />\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default shareIcons;\n","import React, { Component } from \"react\";\nimport ShareIcons from \"./shareIcons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuoteLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../App.css\";\n\nclass quoteBox extends Component {\n  state = {\n    currentQuote: \"Those who dare to fail miserably can achieve greatly.\",\n    currentAuthor: \"- John F. Kennedy\",\n  };\n\n  getQuote = () => {\n    let randomIndex;\n    fetch(\n      \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        randomIndex = Math.floor(Math.random() * data.quotes.length);\n        this.setState({ currentQuote: data.quotes[randomIndex].quote });\n        this.setState({\n          currentAuthor: \"- \" + data.quotes[randomIndex].author,\n        });\n      });\n  };\n\n  handleClick = () => {\n    this.getQuote();\n    this.props.onColorUpdate();\n  };\n\n  render() {\n    return (\n      // new quote\n      <div id=\"quote-box\" style={{ color: this.props.currentColor }}>\n        <div>\n          <div class=\"row first-row\">\n            <FontAwesomeIcon icon={faQuoteLeft} />\n            <p id=\"text\">{this.state.currentQuote}</p>\n          </div>\n\n          <i id=\"author\">{this.state.currentAuthor}</i>\n        </div>\n\n        <div class=\"row last-row\">\n          <ShareIcons color={this.props.currentColor} />\n          <button\n            id=\"new-quote\"\n            className=\"button btn-padding\"\n            onClick={this.handleClick}\n            style={{\n              backgroundColor: this.props.currentColor,\n            }}\n          >\n            Next inspiration\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default quoteBox;\n","import React, { Component } from \"react\";\nimport QuoteBox from \"./components/quoteBox\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    currentColor: \"#3A86FF\",\n  };\n\n  render() {\n    return (\n      <div className=\"App\" style={{ backgroundColor: this.state.currentColor }}>\n        <QuoteBox\n          currentColor={this.state.currentColor}\n          onColorUpdate={this.handleColorUpdate}\n        />\n      </div>\n    );\n  }\n\n  i = 0;\n  handleColorUpdate = () => {\n    const colors = [\"#FFBE0B\", \"#FB5607\", \"#FF006E\", \"#8338EC\", \"#3A86FF\"];\n    if (this.i === colors.length) this.i = 0;\n    this.setState({ currentColor: colors[this.i] });\n    this.i++;\n  };\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}